"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.main = void 0;
const aws_sdk_1 = require("aws-sdk");
// import { logger, metrics, tracer } from "./common/powertools";
// import { v4 as uuidv4 } from "uuid";
// import type { Subsegment } from "aws-xray-sdk-core";
const ddbClient = new aws_sdk_1.DynamoDB.DocumentClient();
const tableName = process.env.TABLE_NAME;
async function main(event) {
    const records = event.Records;
    const order = JSON.parse(records[0].body);
    const userId = order.PK.S;
    for (const item of order.orderItems.L) {
        console.log(item);
        const element = item.M.sk;
        const params = {
            TableName: tableName,
            Key: {
                PK: `${userId}`,
                SK: `${element.S}`,
            },
            UpdateExpression: "set cartProductStatus = :status, UpdateOn = :Updated",
            ExpressionAttributeValues: {
                ":status": "ORDERED",
                ":Updated": Date.now().toString(),
            },
            ReturnValues: "UPDATED_NEW",
        };
        try {
            const res = await ddbClient.update(params).promise();
            console.log("Response", { res });
        }
        catch (err) {
            // logger.info("Error: ", { err });
        }
    }
    return event;
}
exports.main = main;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVldWVDb25zdW1lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInF1ZXVlQ29uc3VtZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EscUNBQW1DO0FBQ25DLGlFQUFpRTtBQUNqRSx1Q0FBdUM7QUFDdkMsdURBQXVEO0FBRXZELE1BQU0sU0FBUyxHQUFHLElBQUksa0JBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQztBQUNoRCxNQUFNLFNBQVMsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQW9CLENBQUM7QUFDNUMsS0FBSyxVQUFVLElBQUksQ0FBQyxLQUFlO0lBQ3hDLE1BQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUM7SUFDOUIsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUMsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFMUIsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsRUFBRTtRQUNyQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xCLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzFCLE1BQU0sTUFBTSxHQUFHO1lBQ2IsU0FBUyxFQUFFLFNBQVM7WUFDcEIsR0FBRyxFQUFFO2dCQUNILEVBQUUsRUFBRSxHQUFHLE1BQU0sRUFBRTtnQkFDZixFQUFFLEVBQUUsR0FBRyxPQUFPLENBQUMsQ0FBQyxFQUFFO2FBQ25CO1lBQ0QsZ0JBQWdCLEVBQUUsc0RBQXNEO1lBQ3hFLHlCQUF5QixFQUFFO2dCQUN6QixTQUFTLEVBQUUsU0FBUztnQkFDcEIsVUFBVSxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUU7YUFDbEM7WUFDRCxZQUFZLEVBQUUsYUFBYTtTQUM1QixDQUFDO1FBQ0YsSUFBSTtZQUNGLE1BQU0sR0FBRyxHQUFHLE1BQU0sU0FBUyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNyRCxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7U0FDbEM7UUFBQyxPQUFPLEdBQVksRUFBRTtZQUNyQixtQ0FBbUM7U0FDcEM7S0FDRjtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQTdCRCxvQkE2QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTUVNFdmVudCB9IGZyb20gXCJhd3MtbGFtYmRhXCI7XG5pbXBvcnQgeyBEeW5hbW9EQiB9IGZyb20gXCJhd3Mtc2RrXCI7XG4vLyBpbXBvcnQgeyBsb2dnZXIsIG1ldHJpY3MsIHRyYWNlciB9IGZyb20gXCIuL2NvbW1vbi9wb3dlcnRvb2xzXCI7XG4vLyBpbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tIFwidXVpZFwiO1xuLy8gaW1wb3J0IHR5cGUgeyBTdWJzZWdtZW50IH0gZnJvbSBcImF3cy14cmF5LXNkay1jb3JlXCI7XG5cbmNvbnN0IGRkYkNsaWVudCA9IG5ldyBEeW5hbW9EQi5Eb2N1bWVudENsaWVudCgpO1xuY29uc3QgdGFibGVOYW1lID0gcHJvY2Vzcy5lbnYuVEFCTEVfTkFNRSBhcyBzdHJpbmc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWFpbihldmVudDogU1FTRXZlbnQpOiBQcm9taXNlPFNRU0V2ZW50PiB7XG4gIGNvbnN0IHJlY29yZHMgPSBldmVudC5SZWNvcmRzO1xuICBjb25zdCBvcmRlciA9IEpTT04ucGFyc2UocmVjb3Jkc1swXS5ib2R5KTtcbiAgY29uc3QgdXNlcklkID0gb3JkZXIuUEsuUztcblxuICBmb3IgKGNvbnN0IGl0ZW0gb2Ygb3JkZXIub3JkZXJJdGVtcy5MKSB7XG4gICAgY29uc29sZS5sb2coaXRlbSk7XG4gICAgY29uc3QgZWxlbWVudCA9IGl0ZW0uTS5zaztcbiAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICBUYWJsZU5hbWU6IHRhYmxlTmFtZSxcbiAgICAgIEtleToge1xuICAgICAgICBQSzogYCR7dXNlcklkfWAsXG4gICAgICAgIFNLOiBgJHtlbGVtZW50LlN9YCxcbiAgICAgIH0sXG4gICAgICBVcGRhdGVFeHByZXNzaW9uOiBcInNldCBjYXJ0UHJvZHVjdFN0YXR1cyA9IDpzdGF0dXMsIFVwZGF0ZU9uID0gOlVwZGF0ZWRcIixcbiAgICAgIEV4cHJlc3Npb25BdHRyaWJ1dGVWYWx1ZXM6IHtcbiAgICAgICAgXCI6c3RhdHVzXCI6IFwiT1JERVJFRFwiLFxuICAgICAgICBcIjpVcGRhdGVkXCI6IERhdGUubm93KCkudG9TdHJpbmcoKSxcbiAgICAgIH0sXG4gICAgICBSZXR1cm5WYWx1ZXM6IFwiVVBEQVRFRF9ORVdcIixcbiAgICB9O1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXMgPSBhd2FpdCBkZGJDbGllbnQudXBkYXRlKHBhcmFtcykucHJvbWlzZSgpO1xuICAgICAgY29uc29sZS5sb2coXCJSZXNwb25zZVwiLCB7IHJlcyB9KTtcbiAgICB9IGNhdGNoIChlcnI6IHVua25vd24pIHtcbiAgICAgIC8vIGxvZ2dlci5pbmZvKFwiRXJyb3I6IFwiLCB7IGVyciB9KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGV2ZW50O1xufVxuIl19